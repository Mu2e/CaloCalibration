// Driver FCL for the calocalibration (Reconstruct and truth)
#include "Offline/fcl/minimalMessageService.fcl"
#include "Offline/fcl/standardProducers.fcl"
#include "Offline/fcl/standardServices.fcl"
#include "Offline/CaloMC/fcl/prolog.fcl"
#include "Offline/CaloReco/fcl/prolog.fcl"
#include "Offline/CaloCluster/fcl/prolog.fcl"
#include "Offline/CommonMC/fcl/prolog.fcl"
#include "Production/JobConfig/digitize/prolog.fcl"


process_name: SourceCalibDigi

source: {
   module_type: RootInput
}


services : @local::Services.SimAndReco
services.SeedService.baseSeed : 99
services.SeedService.maxUniqueEngines : 20
source.firstRun: 1201
physics: {
    producers: {
      
      @table::Digitize.producers
      @table::CaloMC.producers
      @table::CaloReco.producers
   }

    filters: {
      @table::Digitize.filters
    }

    p1: [ @sequence::CaloMC.DigiSim, @sequence::CaloMC.StepSim]


    trigger_paths: [p1]
}


outputs:{

  CalibOutput : {
    module_type : RootOutput
    fileName    : "dig.owner.SourceCalib.version.sequencer.art"
    outputCommands : [ "drop mu2e::TriggerInfo_*_*_*", "keep mu2e::*_*_*_*"]
  }
}

physics.EndPath : [CalibOutput]
physics.end_paths: [EndPath]



physics.producers.FindMCPrimary.PrimaryProcess : "mu2eCaloCalib"

